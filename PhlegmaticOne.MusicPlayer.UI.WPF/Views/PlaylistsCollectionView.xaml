<UserControl x:Class="PhlegmaticOne.MusicPlayer.UI.WPF.Views.PlaylistsCollectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PhlegmaticOne.MusicPlayer.UI.WPF.Views"
             xmlns:converters="clr-namespace:PhlegmaticOne.MusicPlayer.UI.WPF.Converters"
             xmlns:controls="clr-namespace:PhlegmaticOne.MusicPlayer.UI.WPF.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:CollectionIsEmptyConverter x:Key="CollectionIsEmptyConverter"/>
    </UserControl.Resources>

    <ScrollViewer Style="{StaticResource NavigationScrollViewStyle}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Grid Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid Column="0" Row="0">
                    <controls:ViewTitle Padding="30" VerticalAlignment="Center" TitleText="Playlists"/>
                </Grid>
                <Grid Column="1" Row="0" Margin="0 0 20 0">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center">

                        <controls:SortMenu HorizontalAlignment="Center" 
                                           DataContext="{Binding SortViewModel}"
                                           ControlLoadCommand="{Binding LoadSortOptionsCommand}"
                                           ViewModelToSort="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>

                        <controls:ReloadButton DataContext="{Binding ReloadViewModel}"
                                               ViewModelToReload="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>

                        <Button Command="{Binding CreatePlaylistCommand}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Viewbox Width="40" Height="40">
                                                    <Border Background="{TemplateBinding BorderBrush}" CornerRadius="24">
                                                        <Viewbox Width="24" Height="24">
                                                            <Canvas Width="24" Height="24">
                                                                <Path Fill="{TemplateBinding Foreground}" Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" />
                                                            </Canvas>
                                                        </Viewbox>
                                                    </Border>
                                                </Viewbox>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderBrush" Value="#212121"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseCaptured" Value="True">
                                                        <Setter Property="Foreground" Value="#A3A3A3"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>

                    </StackPanel>
                </Grid>
            </Grid>

            <Grid Row="1">
                <controls:ItemCardsListing Margin="30 30 0 0 "
                                           DataContext="{Binding Items}"
                                           ItemClickCommand="{Binding DataContext.ActiveArtistNavigationCommand, ElementName=ArtistsCollectionViewRoot}"
                                           OnLoadCommandParameter="{Binding DataContext, ElementName=ArtistsCollectionViewRoot}"
                                           OnLoadCommand="{Binding DataContext.ReloadViewModel.ReloadCommand, ElementName=ArtistsCollectionViewRoot}"
                                           CanExecuteOnLoadCommand="{Binding DataContext.Items, ElementName=ArtistsCollectionViewRoot, Converter={StaticResource CollectionIsEmptyConverter}}">
                    <controls:ItemCardsListing.CardControlTemplate>
                        <ControlTemplate>
                            <controls:ArtistCard Margin="5 10"/>
                        </ControlTemplate>
                    </controls:ItemCardsListing.CardControlTemplate>
                </controls:ItemCardsListing>
            </Grid>
        </Grid>
    </ScrollViewer>
</UserControl>
