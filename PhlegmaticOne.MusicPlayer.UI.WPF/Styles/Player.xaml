<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonYellow" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="#FFCC00"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PlayerLine" TargetType="{x:Type Slider}">
        <Border Background="#262626">
            <Grid MinHeight="{TemplateBinding MinHeight}">
                <Track x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonYellow}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>

                    <Track.Thumb >
                        <Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" VerticalAlignment="Top">
                            <Thumb.Template>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Canvas Name="ThumbCanvas" VerticalAlignment="Top">
                                        <Border Name="ThumbBorder" Height="7" Width="10" CornerRadius="4" Background="#FFCC00"/>
                                        <Canvas.RenderTransform>
                                            <TranslateTransform X="-3"/>
                                        </Canvas.RenderTransform>
                                    </Canvas>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>


    <Style x:Key="PlayerButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2C2C2C"></Setter>
                            <Setter Property="Foreground" Value="#BFBFBF"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThreeStatePlayerToggleButtonStyle" TargetType="ToggleButton">

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsThreeState" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Self}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">

                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter Name="RepeatButtonContentPresenter"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2C2C2C"></Setter>
                            <Setter Property="Foreground" Value="#BFBFBF"></Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="RepeatButtonContentPresenter" Property="ContentPresenter.Content">
                                <Setter.Value>
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}" 
                                                                      Data="M2,5.27L3.28,4L20,20.72L18.73,22L15.73,19H7V22L3,18L7,14V17H13.73L7,10.27V11H5V8.27L2,5.27M17,13H19V17.18L17,15.18V13M17,5V2L21,6L17,10V7H8.82L6.82,5H17Z" />
                                        </Canvas>
                                    </Viewbox>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#323232"></Setter>
                            <Setter TargetName="RepeatButtonContentPresenter" Property="ContentPresenter.Content">
                                <Setter.Value>
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <Path Fill="White" Data="M17,17H7V14L3,18L7,22V19H19V13H17M7,7H17V10L21,6L17,2V5H5V11H7V7Z" />
                                        </Canvas>
                                    </Viewbox>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Background" Value="#323232"></Setter>
                            <Setter TargetName="RepeatButtonContentPresenter" Property="ContentPresenter.Content">
                                <Setter.Value>
                                    <Viewbox Width="24" Height="24">
                                        <Canvas Width="24" Height="24">
                                            <Path Fill="White" Data="M13,15V9H12L10,10V11H11.5V15M17,17H7V14L3,18L7,22V19H19V13H17M7,7H17V10L21,6L17,2V5H5V11H7V7Z" />
                                        </Canvas>
                                    </Viewbox>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PlayerToggleButtonStyle" TargetType="ToggleButton">

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsThreeState" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Self}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">

                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2C2C2C"></Setter>
                            <Setter Property="Foreground" Value="#BFBFBF"></Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#323232"></Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PlayerSongOptionsMenuStyle" TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="BorderBrush" Value="#464646"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Grid>
                            <ContentPresenter ContentSource="Header" />
                        </Grid>

                        <Popup AllowsTransparency="True"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                               Placement="Top"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">

                            <Border Background="#2B2B2B" CornerRadius="3">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <ItemsPresenter />
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="#2C2C2C"/>
                            <Setter Property="Foreground" Value="#BFBFBF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>